# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    characters_per_page: 12

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $charactersPerPage: '%characters_per_page%'

    _instanceof:
        App\Service\CharacterSearchCriteria\CharacterSearchCriteriaInterface:
            tags: ['app.character_search_criteria']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\CharacterSearchCriteria\Factory\CharacterSearchCriteriaFactory:
        arguments:
            $characterSearchCriteria: !tagged_iterator app.character_search_criteria

    app.cache_store:
        class: Symfony\Component\HttpKernel\HttpCache\Store
        arguments:
            $root: '%kernel.cache_dir%/http_cache'

    app.caching_http_client:
        class: Symfony\Component\HttpClient\CachingHttpClient
        arguments:
            $client: '@http_client'
            $store: '@app.cache_store'
            $defaultOptions: { 'default_ttl': 3600 }

    App\Service\ApiService:
        arguments:
            # TODO: CachingHttpClient defeats concurrency https://github.com/symfony/symfony/issues/36967
            # so, if we use the CachingHttpClient, the requests will be sequential.
            # consider a "manual" approach, eg https://developer.happyr.com/http-client-and-caching
            $httpClient: '@app.caching_http_client'
            $apiBaseUrl: '%env(RICK_AND_MORTY_API_BASE_URL)%'
            $characterEndpoint: 'character'
            $locationEndpoint: 'location'
            $episodeEndpoint: 'episode'

